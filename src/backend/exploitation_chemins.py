'''
Fonction de chargement des données JSON et d'initialisation du dossier d'archivage.
'''

import os
import json


# === Chargement des données JSON === #
def charger_donnees_stock(vpath):
    """
    Charge les données du fichier JSON de stock.

    :param vpath["Stock"]: Chemin vers le fichier JSON de stock.
    :return: Données du fichier sous forme de dictionnaire.
    """
    try:
        with open(vpath["Stock"], "r", encoding="utf-8") as f:
            return json.load(f)
    except FileNotFoundError:
        raise FileNotFoundError(f"Le fichier de stock '{vpath['Stock']}' est introuvable.")
    except json.JSONDecodeError:
        raise ValueError(f"Le fichier de stock '{vpath['Stock']}' contient des données invalides.")

def charger_donnees_menu(vpath):
    """
    Charge les données du fichier JSON de menu.

    :param vpath["Menu"]: Chemin vers le fichier JSON de menu.
    :return: Données du fichier sous forme de dictionnaire.
    """
    try:
        with open(vpath["Menu"], "r", encoding="utf-8") as f:
            return json.load(f)
    except FileNotFoundError:
        raise FileNotFoundError(f"Le fichier de menu '{vpath['Menu']}' est introuvable.")
    except json.JSONDecodeError:
        raise ValueError(f"Le fichier de menu '{vpath['Menu']}' contient des données invalides.")

# === Dossier d'archivage === #
def initialiser_dossier_archive(vpath):
    """
    Initialise le dossier d'archivage et crée la structure si nécessaire.
    """

    dossier_path = vpath["archive"]

    if dossier_path:
        # Créer la structure de dossiers si elle n'existe pas
        logs_path = os.path.join(dossier_path, "logs") # Définie le dossier des logs
        os.makedirs(logs_path, exist_ok=True) # Crée le dossier des logs

        commandes_path = os.path.join(dossier_path, "commandes") # Définie le dossier des commandes
        os.makedirs(commandes_path, exist_ok=True) # Crée le dossier des commandes

        en_cours_path = os.path.join(commandes_path, "en_cours") # Définie le dossier des commandes en cours
        os.makedirs(en_cours_path, exist_ok=True) # Crée le dossier des commandes en cours

        terminee_path = os.path.join(commandes_path, "terminee") # Définie le dossier des commandes terminées
        os.makedirs(terminee_path, exist_ok=True) # Crée le dossier des commandes terminées

        annulee_path = os.path.join(commandes_path, "annulee") # Définie le dossier des commandes annulées
        os.makedirs(annulee_path, exist_ok=True) # Crée le dossier des commandes annulées

        corrompu_path = os.path.join(commandes_path, "corrompu") # Définie le dossier des fichiers de commandes corrompus
        os.makedirs(corrompu_path, exist_ok=True) # Crée le dossier des fichiers de commandes corrompus
        
    else:
        raise ValueError("Le chemin du dossier d'archivage n'est pas défini dans le fichier de configuration.")
